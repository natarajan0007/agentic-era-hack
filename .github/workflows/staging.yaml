# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Deploy to Staging

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'data_ingestion/**'
      - 'tests/**'
      - 'deployment/**'
      - 'uv.lock'

jobs:
  deploy_and_test_staging:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.WIF_POOL_ID }}/providers/${{ secrets.WIF_PROVIDER_ID }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'
          create_credentials_file: true
          project_id: ${{ vars.CICD_PROJECT_ID }}

      - name: Build and Push Container Image
        env:
          PROJECT_ID: ${{ vars.STAGING_PROJECT_ID }}
          REGION: ${{ vars.REGION }}
          REPOSITORY_ID: intellicaai-repo
          SERVICE_NAME: intellicaai
        run: |- 
          gcloud builds submit . --tag "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        env:
          PROJECT_ID: ${{ vars.STAGING_PROJECT_ID }}
          REGION: ${{ vars.REGION }}
          SERVICE_NAME: intellicaai
          APP_SA_EMAIL: ${{ vars.APP_SA_EMAIL_STAGING }}
        run: |- 
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/intellicaai-repo/${{ env.SERVICE_NAME }}:${{ github.sha }}" \
            --region ${{ env.REGION }} \
            --project ${{ env.PROJECT_ID }} \
            --service-account ${{ env.APP_SA_EMAIL }} \
            --allow-unauthenticated

      - name: Fetch Auth Token
        id: fetch-token
        run: |
          _AUTH_TOKEN=$(gcloud auth print-access-token -q)
          echo "::add-mask::${_AUTH_TOKEN}"
          echo "_auth_token=${_AUTH_TOKEN}" >> $GITHUB_OUTPUT

      - name: Run load test
        run: |
          export _AUTH_TOKEN="${{ steps.fetch-token.outputs._auth_token }}"
          pip install locust==2.31.1
          locust -f tests/load_test/load_test.py \
          --headless \
          -t 30s -u 2 -r 0.5 \
          --csv=tests/load_test/.results/results \
          --html=tests/load_test/.results/report.html

      - name: Export Load Test Results to GCS
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          gcloud storage cp --recursive tests/load_test/.results gs://${{ vars.BUCKET_NAME_LOAD_TEST_RESULTS }}/results-${TIMESTAMP} --quiet
          echo "_________________________________________________________________________"
          echo "Load test results copied to gs://${{ vars.BUCKET_NAME_LOAD_TEST_RESULTS }}/results-${TIMESTAMP}"
          echo "HTTP link: https://console.cloud.google.com/storage/browser/${{ vars.BUCKET_NAME_LOAD_TEST_RESULTS }}/results-${TIMESTAMP}"
          echo "_________________________________________________________________________"

  call_production_workflow:
    needs: deploy_and_test_staging
    uses: ./.github/workflows/deploy-to-prod.yaml
    permissions:
      contents: 'read'
      id-token: 'write'
    secrets: inherit